# Allow ingress from Guacamole instance via ssh
# For: DevOps ssh access from Guacamole instance to pentest portal instance
resource "aws_security_group_rule" "pentestportal_ingress_from_guacamole_via_ssh" {
  provider = aws.provisionassessment

  security_group_id = aws_security_group.pentestportal.id
  type              = "ingress"
  protocol          = "tcp"
  cidr_blocks       = ["${aws_instance.guacamole.private_ip}/32"]
  from_port         = 22
  to_port           = 22
}

# Allow ingress from Guacamole instance via VNC
# For: Assessment team VNC access from Guacamole instance to pentest portal
# instance
resource "aws_security_group_rule" "pentestportal_ingress_from_guacamole_via_vnc" {
  provider = aws.provisionassessment

  security_group_id = aws_security_group.pentestportal.id
  type              = "ingress"
  protocol          = "tcp"
  cidr_blocks       = ["${aws_instance.guacamole.private_ip}/32"]
  from_port         = 5901
  to_port           = 5901
}

# Allow ingress from Kali instances via port 443
# For: Assessment team HTTPS access to pentest portal from Kali instances
resource "aws_security_group_rule" "pentestportal_ingress_from_kali_via_https" {
  count    = lookup(var.operations_instance_counts, "pentestportal", 0) > 0 ? 1 : 0
  provider = aws.provisionassessment

  security_group_id = aws_security_group.pentestportal.id
  type              = "ingress"
  protocol          = "tcp"
  cidr_blocks       = formatlist("%s/32", aws_instance.kali[*].private_ip)
  from_port         = 443
  to_port           = 443
}

# Allow ingress from Kali instances via port 8080
# For: Assessment team "development mode" access to pentest portal from
# Kali instances
resource "aws_security_group_rule" "pentestportal_ingress_from_kali_via_8080" {
  count    = lookup(var.operations_instance_counts, "pentestportal", 0) > 0 ? 1 : 0
  provider = aws.provisionassessment

  security_group_id = aws_security_group.pentestportal.id
  type              = "ingress"
  protocol          = "tcp"
  cidr_blocks       = formatlist("%s/32", aws_instance.kali[*].private_ip)
  from_port         = 8080
  to_port           = 8080
}

# Allow egress to anywhere via HTTP and HTTPS
# For: Pentest portal installation dependencies
resource "aws_security_group_rule" "pentestportal_egress_to_anywhere_via_allowed_ports" {
  provider = aws.provisionassessment
  for_each = toset(["80", "443"])

  security_group_id = aws_security_group.pentestportal.id
  type              = "egress"
  protocol          = "tcp"
  cidr_blocks       = ["0.0.0.0/0"]
  from_port         = each.key
  to_port           = each.key
}
